---
name: Manage Cache

on:
  pull_request:
    types: [closed]
  schedule:
    - cron: '0 0 * * 0' # Every Sunday at 00:00
  workflow_dispatch:
    inputs:
      ref:
        description: The ref where cache entries should be deleted
        type: string

permissions: {}

env:
  REF: >-
    ${{
      github.event_name == 'pull_request' && github.event.pull_request.merged && format('refs/pull/{0}/merge', github.event.pull_request.number)
      || inputs.ref
      || github.event_name != 'pull_request' && github.ref
      || ''
    }}

jobs:
  cleanup-cache:
    name: Cleanup cache
    permissions:
      actions: write
    runs-on: ubuntu-latest
    steps:
      - if: env.REF != ''
        name: Deleting workflow caches on ${{ env.REF }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CACHE_KEYS="$(gh cache list -R ${{ github.repository }} --ref ${{ env.REF }} --limit 100 --order asc --sort last_accessed_at | cut -f 2 | tr '\n' ' ')"
          for key in $CACHE_KEYS; do
            gh cache delete $key -R ${{ github.repository }}
          done

  setup-cache:
    if: github.event_name != 'pull_request'
    name: Setup cache
    permissions:
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: â¤µ Checkout Branch
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          ref: ${{ env.REF }}

      - name: ðŸ“¦ Setup
        uses: ./.github/actions/setup
